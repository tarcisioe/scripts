#!/bin/bash

source scriptlib-init

require dependencies
require util
require notify

SSHOT_DIR="${HOME}/.screenshots"


usage() {
echo "\
Usage: $(script-name) [OPTION...]
Take a screenshot and either save it or copy it to clipboard.

Optional arguments:
    -c/--clipboard   Copy screenshot to clipboard.
    -h/--help        Print this help message and exit.
    -s/--select      Enable region selection.
    -f/--file-uri    Use file-uri to copy instead of copying the image buffer."
}


get-save-path() {
    # Use dmenu to get the filename to save.
    #
    # Usage: get-save-path DIRECTORY
    #
    # Positional arguments:
    #     DIRECTORY   Where to save the file.

    local directory="${1}"

    local filename
    filename="$(dmenu -p "Filename (.png)" < /dev/null)" &&

    echo "${directory}/${filename}.png"
}


save() {
    # Save a file to directory chosen by the user.
    #
    # Usage: save FILE DIRECTORY
    #
    # Positional arguments:
    #     FILE        The file to save.
    #     DIRECTORY   Where to save it.

    local file="${1}"
    local directory="${2}"

    mkdir -p "${directory}" &&

    local path
    path="$(get-save-path "${directory}")" &&

    cp "${file}" "${path}"
}


copy-to-clipboard() {
    # Copy an image to both selection and clipboard X clipboards.
    #
    # Usage: save-or-clip FILE
    #
    # Positional arguments:
    #     FILE_URI    A 0/1 flag to use file uri to clip or not.
    #     FILE        The file to copy.

    local file_uri="${1}"
    local file="${2}"

    if [[ "${file_uri}" == 1 ]]
    then
        xclip -t 'text/uri-list' -selection clipboard <<< "file://${file}" &&
        xclip -t 'text/uri-list' <<< "file://${file}"
    else
        xclip -t image/png "${file}" -selection clipboard &&
        xclip -t image/png "${file}"
    fi
}


save-or-clip() {
    # Save or send to clipboard a given temporary file.
    #
    # Usage: save-or-clip CLIP TMPFILE DIRECTORY
    #
    # Positional arguments:
    #     CLIP        A 0/1 flag to send to clipboard or not (save to file).
    #     FILE_URI    A 0/1 flag to use file uri to clip or not.
    #     TMPFILE     The filename of the temporary file. Will be deleted in the
    #                 end.
    #     DIRECTORY   The directory where to save the file if that is the case.

    local clip="${1}"
    local file_uri="${2}"
    local tmpfile="${3}"
    local directory="${4}"

    if [[ "${clip}" == 1 ]]
    then
        copy-to-clipboard "${file_uri}" "${tmpfile}"
    else
        save "${tmpfile}" "${directory}"
    fi || true  # We actually want to run the rm anyway.

    if ! [[ "${clipboard}" == 1 ]] || [[ ${file_uri} == 0 ]]
    then
         rm "${tmpfile}"
    fi
}


sshot() {
    # Takes a screenshot of the whole screen or a region, and saves it or sends
    # it to the clipboard .
    #
    # Usage: sshot SELECT CLIPBOARD
    #
    # Positional arguments:
    #     SELECT      A 0/1 flag to either select a region or capture the whole
    #                 screen.
    #     CLIPBOARD   A 0/1 flag to send to clipboard or not (save to file).
    #     FILE_URI    A 0/1 flag to use file uri to clip or not.

    local select="${1}"
    local clipboard="${2}"
    local file_uri="${3}"

    local select_flag="$(choose "${select}" "-sB" "")"

    local tmp
    tmp="$(mktemp --suffix=.png)" &&

    maim -ou ${select_flag} "${tmp}" &&
    save-or-clip "${clipboard}" "${file_uri}" "${tmp}" "${SSHOT_DIR}"
}


main() (
    set -e

    local select=0;
    local clipboard=0;
    local file_uri=0;

    local options
    options=$(getopt -o hscf -l help,select,clipboard,file-uri -- "$@")
    eval set -- "$options"

    while true; do
        case "$1" in
            -h|--help)
                usage && exit 0
                ;;
            -s|--select)
                select=1
                ;;
            -c|--clipboard)
                clipboard=1
                ;;
            -f|--file-uri)
                file_uri=1
                ;;
            --) shift ;&
            *) break ;;
        esac
        shift
    done

    { [[ "${file_uri}" == 1 ]] && [[ "${clipboard}" == 0 ]]; } &&
        die "Option file-uri can only be used with clipboard."

    sshot "${select}" "${clipboard}" "${file_uri}"
)


check-dependencies maim xclip
wrap-shortcut main "$@"
