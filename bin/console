#!/bin/bash

source scriptlib-init

require dependencies
require util

TERMINAL="${TERMINAL:-urxvt}"
WINNAME="terminal-console"


usage() {
echo "\
Usage: $(script-name) [OPTION...]
Spawn, hide or show a console in the corner of the screen.

Optional arguments:
    -h/--help     Print this help message and exit."
}


spawn-console() {
    "${TERMINAL}" -geometry 80x1-0+0 -name "${WINNAME}"
}


list-window-ids() {
    xprop -root |
    grep '_NET_CLIENT_LIST(WINDOW)' |
    sed -e 's/.*#\s//' -e 's/, /\n/g'
}


xprop-by-id() {
    local id="${1}"

    xprop -id "${id}" 2> /dev/null
}


get-window-state() {
    local window_name="${1}"
    local ids="$(list-window-ids)"

    for id in ${ids}
    do
        local xprop_output="$(xprop-by-id "${id}")"

        if [[ "${xprop_output}" == *"${window_name}"* ]]
        then
            [[ "${xprop_output}" == *'Withdrawn'* ]] &&
                echo 'HIDDEN' ||
                echo 'SHOWING'
        return
        fi

    done

    echo 'CLOSED'
}


spawn-show-or-hide() {
    local window_name="${1}"

    local window_state="$(get-window-state "${window_name}")"

    case "${window_state}" in
        'CLOSED')
            "${@:2}" & disown ;;
        'HIDDEN')
            i3-msg '[instance="'${window_name}'"]' scratchpad show 2>&1 > /dev/null ;;
        'SHOWING')
            i3-msg '[instance="'${window_name}'"]' move scratchpad 2>&1 > /dev/null ;;
    esac
}


console() {
    spawn-show-or-hide "${WINNAME}" spawn-console
}


main() (
    set -e

    local options
    options=$(getopt -o h -l help -- "$@")
    eval set -- "$options"

    while true; do
        case "$1" in
            -h|--help)
                usage && exit 0
                ;;
            --) shift ;&
            *) break ;;
        esac
        shift
    done

    console
)


check-dependencies xprop
main "$@"
